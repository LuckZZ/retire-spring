#Tomcat
server.port=8080
server.tomcat.uri-encoding = UTF-8

#DB Configuration:
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/retire_spring?unicode=true&characterEncoding=UTF-8
spring.datasource.username = retireU
spring.datasource.password = retire123

#JPA Configuration:
spring.jpa.database=MySQL
spring.jpa.show-sql=true  
spring.jpa.generate-ddl=true  
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy  
#格式化sql语句
#spring.jpa.properties.hibernate.format_sql=true

#thymeleaf
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.suffix=.html
spring.thymeleaf.cache=false
spring.thymeleaf.mode=LEGACYHTML5

#simple logging config
#logging.path=/usr/local/tomcat/logs
#logging.file=/usr/local/tomcat/logs/retire-spring.log
#logging.level.com.example.controller=INFO
#logging.level.com.example.comm=INFO
#logging.level.org.springframework.web=INFO
#logging.level.org.hibernate=WARN

#complex logging config
logging.config=classpath:logback-spring.xml

#mail setting
# 设置邮箱主机
spring.mail.host=smtp.noooble.com
# 设置用户名
spring.mail.username=service@noooble.com
# 设置密码
spring.mail.password=Zxm123Zxm
spring.mail.default-encoding=UTF-8
# 设置是否需要认证，如果为true,那么用户名和密码就必须的，
#如果设置false，可以不设置用户名和密码，当然也得看你的对接的平台是否支持无密码进行访问的。
spring.mail.properties.mail.smtp.auth=true
# STARTTLS[1]  是对纯文本通信协议的扩展。它提供一种方式将纯文本连接升级为加密连接（TLS或SSL），而不是另外使用一个端口作加密通信。
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.port=465

#上传文件路径
file.pictures.url = /usr/local/tomcat/pictures/
file.pictures.res.url = file:/usr/local/tomcat/pictures/
#发送邮件账户
retire.mail.from=service@noooble.com
#url
retire.base.url=http://www.noooble.com
